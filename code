import telebot

# Define the token for your Telegram bot
token = 'Your_Token'

# Create an instance of the bot
bot = telebot.TeleBot(token)

import telebot

# Create a bot instance
bot = telebot.TeleBot("Your_token")
#create the intsturtion
@bot.message_handler(commands=['instruction'])
def instruction_handler(message):
    bot.send_message(message.chat.id, ' Hello! I am a game bot! Type /start to play the game!')



# Store the game state in a dictionary
games = {}

# Handler for the /start command to new game
@bot.message_handler(commands=['start'])
def start_game(message):
    chat_id = message.chat.id
    games[chat_id] = {'board': [' '] * 9, 'current_player': 'X'}
    display_board(chat_id)


# Handler for handling user moves
@bot.message_handler(func=lambda message: message.text.isdigit())
def make_move(message):
    chat_id = message.chat.id
    if chat_id in games:
        move = int(message.text)
        game = games[chat_id]
        board = game['board']
        current_player = game['current_player']

        if is_valid_move(board, move):
            board[move] = current_player

            # Check for game over conditions
            if is_winner(board, current_player):
                bot.send_message(chat_id, f"Player {current_player} you are winner!")
                del games[chat_id]
                return
            elif is_board_full(board):
                bot.send_message(chat_id, "It's a tie!")
                del games[chat_id]
                return
            else:
                # Switch to another player
                game['current_player'] = 'O' if current_player == 'X' else 'X'
                display_board(chat_id)
        else:
            bot.send_message(chat_id, "Invalid move. Try again.")


# Display the  board
def display_board(chat_id):
    game = games[chat_id]
    b = game['board'] # b is list
    board_str = board_str = f"""
    ‎‎‎‎     {b[0]}   |   {b[1]}‎   |   {b[2]}‎
-----+-----+-----
    ‎‎‎‎ {b[3]}   |   {b[4]}‎  |   {b[5]}‎
-----+-----+-----
    ‎‎‎‎ {b[6]}   |   {b[7]}‎   |   {b[8]}‎  
    """

    board_str = board_str.replace(' ', ' ')
    bot.send_message(chat_id, board_str)


# Check if a move is valid
def is_valid_move(board, move):
    return 0 <= move < 9 and board[move] == ' '


# Check if a player has won
def is_winner(board, player):
    winning_combinations = [
        [0, 1, 2],  [3, 4, 5],  [6, 7, 8],  # rows
        [0, 3, 6],  [1, 4, 7],  [2, 5, 8],  # columns
        [0, 4, 8],  [2, 4, 6]              # diagonals
    ]
    for combination in winning_combinations:
        if all(board[i] == player for i in combination):
            return True
    return False


# Check if the board is full
def is_board_full(board):
    return all(cell != ' ' for cell in board)


# Start the bot
bot.polling()
